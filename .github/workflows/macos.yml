name: MacOS Build (Release)
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        compile: [mac]
        build: [release, 32bit]

        include:
          - compile: mac
            os: macos-13
            folder: macos

    name: ${{ matrix.compile }}-${{ matrix.build }}
    permissions: write-all
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Restore action cache
        uses: actions/cache@main
        with:
          key: cache-${{ matrix.compile }}-${{ matrix.build }}
          path: |
            .haxelib/
            export/${{ matrix.build }}/${{ matrix.folder }}/haxe/
            export/${{ matrix.build }}/${{ matrix.folder }}/obj/
          restore-keys: |
            cache-${{ matrix.compile }}-${{ matrix.build }}

      - name: Installing/Updating libraries
        run: |
          haxe -cp commandline -D analyzer-optimize --run Main setup -s
      - name: Compile hxcpp
        run: |
          cd .haxelib/hxcpp/git/tools/run
          haxe compile.hxml
          cd ..
          cd ./hxcpp
          haxe compile.hxml
          cd ../..

      - name: Compile (x86)
        if: ${{ matrix.build == '32bit' }}
        run: haxelib run lime build ${{ matrix.compile }} -${{ matrix.build }} -D HXCPP_M32

      - name: Compile (x64)
        if: ${{ matrix.build != '32bit' }}
        run: haxelib run lime build ${{ matrix.compile }} -${{ matrix.build }}

      - name: Tar files
        run: tar -zcvf AlterEngine.tar.gz -C export/release/macos/bin .

      - name: Uploading artifact
        uses: actions/upload-artifact@main
        with:
          name: Codename Engine
          path: AlterEngine.tar.gz
          if-no-files-found: error

      - name: Clearing already existing cache
        uses: actions/github-script@main
        with:
          script: |
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const cache of caches.data.actions_caches) {
              if (cache.key == "cache-${{ matrix.compile }}-${{ matrix.build }}") {
                console.log('Clearing ' + cache.key + '...')
                await github.rest.actions.deleteActionsCacheById({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  cache_id: cache.id,
                })
                console.log("Cache cleared.")
              }
            }

      - name: Uploading new cache
        uses: actions/cache@main
        with:
          key: cache-${{ matrix.compile }}-${{ matrix.build }}
          path: |
            .haxelib/
            export/${{ matrix.build }}/${{ matrix.folder }}/haxe/
            export/${{ matrix.build }}/${{ matrix.folder }}/obj/
          restore-keys: |
            cache-${{ matrix.compile }}-${{ matrix.build }}