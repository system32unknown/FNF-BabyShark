name: Linux Build (Release)
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Linux Build
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Restore action cache
        uses: actions/cache@main
        with:
          key: cache-build-linux
          path: |
            .haxelib/
            export/release/linux/haxe/
            export/release/linux/obj/
          restore-keys: |
            cache-build-linux

      - name: Install Haxelib
        run: |
          sudo apt-get install libvlc-dev
          sudo apt-get install libvlccore-dev
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          chmod +x ./commandline/unix.sh
          sh ./commandline/unix.sh
      - name: Compile hxcpp
        run: |
          cd .haxelib/hxcpp/git/tools/run
          haxe compile.hxml
          cd ..
          cd ./hxcpp
          haxe compile.hxml
          cd ../..

      - name: Compile
        run: haxelib run lime build Project.xml linux

      - name: Tar files
        run: tar -zcvf AlterEngine.tar.gz -C export/release/linux/bin .

      - name: Uploading artifact
        uses: actions/upload-artifact@main
        with:
          name: Alter Engine (Linux)
          path: AlterEngine.tar.gz
          if-no-files-found: error

      - name: Clearing already existing cache
        uses: actions/github-script@main
        with:
          script: |
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const cache of caches.data.actions_caches) {
              if (cache.key == "cache-build-linux") {
                console.log('Clearing ' + cache.key + '...')
                await github.rest.actions.deleteActionsCacheById({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  cache_id: cache.id,
                })
                console.log("Cache cleared.")
              }
            }

      - name: Uploading new cache
        uses: actions/cache@main
        with:
          key: cache-build-linux
          path: |
            .haxelib/
            export/release/linux/haxe/
            export/release/linux/obj/
          restore-keys: |
            cache-build-linux