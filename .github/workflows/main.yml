name: Build

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  buildWindows:
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@main

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5

      # Not caching the bin folder to prevent asset duplication and stuff like that
      - name: Get last Action build
        uses: actions/cache@main
        with:
          key: cache-build-windows
          path: |
            .haxelib/
            export/release/windows/haxe/
            export/release/windows/obj/
          restore-keys: |
            cache-build-windows
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup C:/haxelib
          haxelib install hxcpp > /dev/null --quiet
          haxelib install hmm --quiet
          haxelib run hmm install
        shell: cmd

      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION

      - name: Compile
        run: haxelib run lime build windows --app-version="4.0.0-${{github.run_id}}"

      - name: Publish Artifact
        uses: actions/upload-artifact@main
        with:
          name: windowsBuild
          path: export/release/windows/bin

      - name: Clear current Action Cache
        uses: actions/github-script@main
        with:
          script: |
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const cache of caches.data.actions_caches) {
              if (cache.key == "cache-build-windows") {
                console.log('Clearing ' + cache.key + '...')
                await github.rest.actions.deleteActionsCacheById({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  cache_id: cache.id,
                })
                console.log("Cache cleared.")
              }
            }

      - name: Caching new Action
        uses: actions/cache@main
        with:
          # caching again since for some reason it doesnt work with the first post cache shit
          key: cache-build-windows
          path: |
            .haxelib/
            export/release/windows/haxe/
            export/release/windows/obj/
          restore-keys: |
            cache-build-windows